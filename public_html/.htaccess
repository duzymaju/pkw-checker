# Use the front controller as index file. It serves as a fallback solution when
# every other rewrite/redirect fails (e.g. in an aliased environment without
# mod_rewrite). Additionally, this reduces the matching process for the
# start page (path "/") because otherwise Apache will apply the rewriting rules
# to each configured DirectoryIndex file (e.g. index.php, index.html, index.pl).
DirectoryIndex app.php

<IfModule mod_rewrite.c>
    RewriteEngine On

    # loop stopping code
    RewriteCond         %{ENV:REDIRECT_STATUS}      200
    RewriteRule         .*                          - [L]

    # require without the www
    RewriteCond         %{HTTP_HOST}                ^www\.(.*) [NC]
    RewriteRule         ^(.*)$                      http://%1/$1 [L,NC,R=301]

    # cache-friendly file names: /static/dddddddd/file.ext
    RewriteCond         %{REQUEST_FILENAME}         !-f
    RewriteCond         %{REQUEST_FILENAME}         !-d
    RewriteCond         %{THE_REQUEST}              ^(GET|HEAD)\ (.*)/static/[0-9]{8}/(.*)\ HTTP/ [NC]
    RewriteRule         .+                          /%3 [L,NC]

    # redirect to our front web controller
    RewriteCond         %{REQUEST_FILENAME}         !-f
    RewriteCond         %{HTTP_HOST}                \.dev [NC]
    RewriteRule         ^(.*)$                      app_dev.php [L,QSA]

    RewriteCond         %{REQUEST_FILENAME}         !-f
    RewriteRule         ^(.*)$                      app.php [L,QSA]
</IfModule>

<IfModule !mod_rewrite.c>
    <IfModule mod_alias.c>
        # When mod_rewrite is not available, we instruct a temporary redirect of
        # the start page to the front controller explicitly so that the website
        # and the generated links can still be used.
        RedirectMatch 302 ^/$ /app.php/
        # RedirectTemp cannot be used instead
    </IfModule>
</IfModule>
